name: Deploy Bot

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/zpbot:latest

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Переходим в директорию проекта
            cd /opt/zpbot

            # Получаем последние изменения
            git pull origin main

            # Останавливаем текущий контейнер
            docker-compose down

            # Удаляем старый образ
            docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/zpbot:latest || true

            # Получаем новый образ
            docker-compose pull

            # Применяем миграции базы данных
            # Используем docker compose run для запуска команды в новом контейнере с доступом к env_file и volumes
            docker-compose run --rm bot npx prisma migrate deploy

            # Запускаем новый контейнер в фоновом режиме
            docker-compose up -d --build

            # Очищаем неиспользуемые образы
            docker image prune -f 